
import random
from .analysis import *

# -------- Data --------

msgs_eye_tri = [
    [50, 66, 5, 48, 62, 13, 75, 29, 24, 61, 42, 70, 66, 62, 32, 14, 81, 8, 15, 78, 2, 29, 13, 49, 1, 80, 82, 40, 63, 81, 21, 19, 0, 40, 51, 65, 26, 14, 21, 70, 47, 44, 48, 42, 19, 48, 13, 47, 19, 49,
        72, 31, 5, 24, 3, 43, 59, 67, 33, 49, 41, 60, 21, 26, 30, 5, 25, 20, 71, 11, 74, 56, 4, 74, 19, 71, 4, 51, 41, 43, 80, 72, 54, 63, 79, 81, 15, 16, 44, 31, 30, 12, 33, 57, 28, 13, 64, 43, 48],
    [80, 66, 5, 48, 62, 13, 75, 29, 24, 61, 42, 70, 66, 62, 32, 14, 81, 8, 15, 78, 2, 29, 13, 49, 1, 29, 11, 30, 52, 81, 21, 19, 0, 25, 26, 54, 20, 14, 21, 70, 47, 44, 48, 42, 19, 48, 13, 47, 19, 49, 44, 26,
        59, 77, 64, 43, 79, 28, 72, 64, 1, 30, 73, 23, 67, 6, 33, 25, 64, 81, 68, 46, 17, 36, 13, 17, 21, 68, 13, 9, 46, 67, 57, 34, 62, 82, 15, 10, 73, 62, 2, 11, 65, 72, 37, 44, 10, 43, 68, 62, 9, 34, 18],
    [36, 66, 5, 48, 62, 13, 75, 29, 24, 61, 42, 70, 66, 62, 32, 14, 81, 8, 15, 78, 2, 29, 13, 49, 1, 69, 76, 52, 9, 48, 66, 80, 22, 64, 57, 40, 49, 78, 3, 16, 56, 19, 47, 40, 80, 6, 13, 64, 29, 49, 64, 63, 6, 49, 31, 13, 16, 10, 45,
        24, 26, 77, 10, 60, 81, 61, 34, 54, 70, 21, 15, 4, 66, 77, 42, 37, 30, 22, 0, 11, 41, 72, 57, 20, 23, 57, 65, 41, 23, 18, 72, 42, 5, 3, 26, 78, 8, 5, 54, 45, 77, 25, 64, 61, 16, 44, 54, 51, 20, 63, 25, 11, 26, 45, 53, 60, 38, 34],
    [76, 66, 5, 49, 75, 54, 69, 46, 32, 1, 42, 60, 26, 48, 50, 80, 32, 24, 55, 61, 47, 12, 21, 12, 49, 54, 34, 25, 36, 15, 56, 55, 20, 9, 8, 62, 13, 82, 9, 44, 29, 60, 53, 82, 42, 80, 5, 43, 71, 3, 80, 77,
        47, 78, 34, 25, 62, 18, 10, 49, 62, 64, 52, 81, 11, 66, 62, 13, 47, 17, 52, 70, 26, 23, 32, 31, 64, 23, 35, 32, 50, 6, 1, 25, 8, 37, 47, 43, 26, 76, 65, 68, 80, 17, 7, 45, 63, 14, 53, 63, 60, 16],
    [63, 66, 5, 49, 75, 54, 2, 60, 29, 40, 78, 47, 60, 75, 67, 71, 60, 2, 65, 7, 47, 14, 45, 74, 59, 41, 80, 13, 60, 13, 81, 22, 35, 50, 40, 39, 2, 59, 48, 31, 76, 2, 80, 75, 1, 56, 67, 11, 21, 8, 40, 65, 45, 75, 55, 39, 60, 42, 13, 3, 22, 57, 2, 6, 58, 9, 70, 1, 58,
        56, 63, 68, 25, 79, 7, 20, 19, 64, 2, 66, 73, 30, 71, 16, 12, 30, 65, 37, 20, 13, 22, 63, 18, 46, 64, 59, 41, 81, 82, 22, 78, 36, 47, 17, 4, 6, 17, 5, 36, 79, 63, 1, 64, 69, 15, 43, 4, 58, 56, 31, 14, 64, 58, 18, 44, 78, 69, 1, 0, 46, 20, 71, 73, 25, 35, 8, 24],
    [34, 66, 5, 49, 75, 54, 23, 74, 11, 13, 28, 26, 19, 48, 67, 57, 37, 60, 34, 28, 74, 10, 17, 32, 11, 18, 19, 43, 19, 81, 42, 4, 62, 9, 46, 49, 32, 51, 76, 58, 4, 43, 47, 17, 67, 79, 21, 32, 44, 16, 30, 37, 26, 28, 41, 68, 57, 34, 51, 10, 69, 70,
        8, 6, 46, 43, 18, 39, 47, 43, 15, 13, 33, 30, 35, 62, 37, 0, 37, 5, 38, 55, 37, 13, 40, 25, 9, 21, 11, 64, 5, 79, 42, 68, 11, 71, 11, 48, 3, 67, 61, 40, 22, 14, 35, 50, 61, 39, 11, 2, 66, 49, 51, 53, 17, 73, 36, 75, 74, 54, 24, 30, 54, 70],
    [27, 66, 5, 49, 75, 54, 2, 60, 29, 40, 2, 55, 9, 15, 59, 18, 68, 3, 36, 5, 47, 77, 44, 38, 1, 18, 28, 76, 4, 34, 60, 63, 58, 80, 17, 54, 79, 75, 48, 54, 55, 19, 62, 64, 14, 47, 51, 70, 75, 5, 11, 47, 45, 58, 68, 69, 79, 25, 38, 45,
        73, 47, 68, 50, 34, 45, 78, 26, 79, 57, 4, 56, 22, 60, 18, 75, 43, 60, 59, 67, 63, 42, 49, 33, 40, 65, 79, 77, 7, 3, 26, 62, 31, 78, 26, 57, 69, 40, 4, 23, 26, 13, 67, 42, 38, 72, 11, 39, 65, 60, 25, 6, 80, 66, 68, 77, 59, 78, 19],
    [77, 66, 5, 49, 75, 54, 2, 60, 29, 40, 2, 55, 9, 15, 59, 18, 68, 3, 36, 5, 47, 60, 21, 80, 1, 72, 55, 16, 82, 35, 57, 19, 1, 66, 18, 27, 39, 17, 74, 81, 39, 14, 78, 0, 25, 65, 43, 66, 64, 38, 81, 23, 24, 50, 57, 30, 71, 75, 26, 68, 54,
        57, 56, 50, 71, 73, 14, 21, 8, 32, 26, 63, 5, 37, 19, 43, 66, 47, 53, 34, 66, 23, 73, 31, 54, 38, 77, 67, 11, 63, 79, 6, 22, 21, 51, 69, 74, 21, 5, 17, 67, 37, 29, 21, 60, 14, 82, 44, 30, 4, 20, 42, 35, 1, 31, 54, 46, 20, 40, 30],
    [33, 66, 5, 49, 75, 54, 2, 60, 29, 40, 2, 55, 9, 15, 59, 18, 68, 3, 36, 5, 47, 33, 21, 59, 44, 18, 28, 76, 59, 34, 60, 63, 79, 27, 12, 54, 5, 49, 48, 54, 55, 52, 62, 72, 69, 10, 57, 22, 58, 48, 67, 53, 7, 34, 32, 30, 31,
        19, 26, 8, 34, 46, 7, 30, 71, 55, 34, 75, 54, 9, 6, 60, 5, 23, 25, 45, 42, 80, 25, 12, 22, 76, 20, 51, 62, 21, 40, 9, 41, 10, 44, 73, 8, 33, 70, 73, 6, 31, 21, 72, 5, 40, 61, 51, 42, 66, 64, 74, 61, 25, 63, 42, 24, 41]
]

msgs_eye_triflat = [
    ["200", "231", "010", "143", "222", "023", "300", "104", "044", "221", "132", "240", "231", "222", "112", "024", "311", "013", "030", "303", "002", "104", "023", "144", "001", "310", "312", "130", "223", "311", "041", "034", "000", "130", "201", "230", "101", "024", "041", "240", "142", "134", "143", "132", "034", "143", "023", "142", "034", "144",
        "242", "111", "010", "044", "003", "133", "214", "232", "113", "144", "131", "220", "041", "101", "110", "010", "100", "040", "241", "021", "244", "211", "004", "244", "034", "241", "004", "201", "131", "133", "310", "242", "204", "223", "304", "311", "030", "031", "134", "111", "110", "022", "113", "212", "103", "023", "224", "133", "143"],
    ["310", "231", "010", "143", "222", "023", "300", "104", "044", "221", "132", "240", "231", "222", "112", "024", "311", "013", "030", "303", "002", "104", "023", "144", "001", "104", "021", "110", "202", "311", "041", "034", "000", "100", "101", "204", "040", "024", "041", "240", "142", "134", "143", "132", "034", "143", "023", "142", "034", "144", "134", "101",
     "214", "302", "224", "133", "304", "103", "242", "224", "001", "110", "243", "043", "232", "011", "113", "100", "224", "311", "233", "141", "032", "121", "023", "032", "041", "233", "023", "014", "141", "232", "212", "114", "222", "312", "030", "020", "243", "222", "002", "021", "230", "242", "122", "134", "020", "133", "233", "222", "014", "114", "033"],
    ["121", "231", "010", "143", "222", "023", "300", "104", "044", "221", "132", "240", "231", "222", "112", "024", "311", "013", "030", "303", "002", "104", "023", "144", "001", "234", "301", "202", "014", "143", "231", "310", "042", "224", "212", "130", "144", "303", "003", "031", "211", "034", "142", "130", "310", "011", "023", "224", "104", "144", "224", "223", "011", "144", "111", "023", "031", "020", "140",
     "044", "101", "302", "020", "220", "311", "221", "114", "204", "240", "041", "030", "004", "231", "302", "132", "122", "110", "042", "000", "021", "131", "242", "212", "040", "043", "212", "230", "131", "043", "033", "242", "132", "010", "003", "101", "303", "013", "010", "204", "140", "302", "100", "224", "221", "031", "134", "204", "201", "040", "223", "100", "021", "101", "140", "203", "220", "123", "114"],
    ["301", "231", "010", "144", "300", "204", "234", "141", "112", "001", "132", "220", "101", "143", "200", "310", "112", "044", "210", "221", "142", "022", "041", "022", "144", "204", "114", "100", "121", "030", "211", "210", "040", "014", "013", "222", "023", "312", "014", "134", "104", "220", "203", "312", "132", "310", "010", "133", "241", "003", "310",
     "302", "142", "303", "114", "100", "222", "033", "020", "144", "222", "224", "202", "311", "021", "231", "222", "023", "142", "032", "202", "240", "101", "043", "112", "111", "224", "043", "120", "112", "200", "011", "001", "100", "013", "122", "142", "133", "101", "301", "230", "233", "310", "032", "012", "140", "223", "024", "203", "223", "220", "031"],
    ["223", "231", "010", "144", "300", "204", "002", "220", "104", "130", "303", "142", "220", "300", "232", "241", "220", "002", "230", "012", "142", "024", "140", "244", "214", "131", "310", "023", "220", "023", "311", "042", "120", "200", "130", "124", "002", "214", "143", "111", "301", "002", "310", "300", "001", "211", "232", "021", "041", "013", "130", "230", "140", "300", "210", "124", "220", "132", "023", "003", "042", "212", "002", "011", "213", "014", "240", "001", "213",
     "211", "223", "233", "100", "304", "012", "040", "034", "224", "002", "231", "243", "110", "241", "031", "022", "110", "230", "122", "040", "023", "042", "223", "033", "141", "224", "214", "131", "311", "312", "042", "303", "121", "142", "032", "004", "011", "032", "010", "121", "304", "223", "001", "224", "234", "030", "133", "004", "213", "211", "111", "024", "224", "213", "033", "134", "303", "234", "001", "000", "141", "040", "241", "243", "100", "120", "013", "044"],
    ["114", "231", "010", "144", "300", "204", "043", "244", "021", "023", "103", "101", "034", "143", "232", "212", "122", "220", "114", "103", "244", "020", "032", "112", "021", "033", "034", "133", "034", "311", "132", "004", "222", "014", "141", "144", "112", "201", "301", "213", "004", "133", "142", "032", "232", "304", "041", "112", "134", "031", "110", "122", "101", "103", "131", "233", "212", "114", "201", "020", "234", "240",
     "013", "011", "141", "133", "033", "124", "142", "133", "030", "023", "113", "110", "120", "222", "122", "000", "122", "010", "123", "210", "122", "023", "130", "100", "014", "041", "021", "224", "010", "304", "132", "233", "021", "241", "021", "143", "003", "232", "221", "130", "042", "024", "120", "200", "221", "124", "021", "002", "231", "144", "201", "203", "032", "243", "121", "300", "244", "204", "044", "110", "204", "240"],
    ["102", "231", "010", "144", "300", "204", "002", "220", "104", "130", "002", "210", "014", "030", "214", "033", "233", "003", "121", "010", "142", "302", "134", "123", "001", "033", "103", "301", "004", "114", "220", "223", "213", "310", "032", "204", "304", "300", "143", "204", "210", "034", "222", "224", "024", "142", "201", "240", "300", "010", "021", "142", "140", "213", "233", "234", "304", "100", "123", "140",
     "243", "142", "233", "200", "114", "140", "303", "101", "304", "212", "004", "211", "042", "220", "033", "300", "133", "220", "214", "232", "223", "132", "144", "113", "130", "230", "304", "302", "012", "003", "101", "222", "111", "303", "101", "212", "234", "130", "004", "043", "101", "023", "232", "132", "123", "242", "021", "124", "230", "220", "100", "011", "310", "231", "233", "302", "214", "303", "034"],
    ["302", "231", "010", "144", "300", "204", "002", "220", "104", "130", "002", "210", "014", "030", "214", "033", "233", "003", "121", "010", "142", "220", "041", "310", "001", "242", "210", "031", "312", "120", "212", "034", "001", "231", "033", "102", "124", "032", "244", "311", "124", "024", "303", "000", "100", "230", "133", "231", "224", "123", "311", "043", "044", "200", "212", "110", "241", "300", "101", "233",
     "204", "212", "211", "200", "241", "243", "024", "041", "013", "112", "101", "223", "010", "122", "034", "133", "231", "142", "203", "114", "231", "043", "243", "111", "204", "123", "302", "232", "021", "223", "304", "011", "042", "041", "201", "234", "244", "041", "010", "032", "232", "122", "104", "041", "220", "024", "312", "134", "110", "004", "040", "132", "120", "001", "111", "204", "141", "040", "130", "110"],
    ["113", "231", "010", "144", "300", "204", "002", "220", "104", "130", "002", "210", "014", "030", "214", "033", "233", "003", "121", "010", "142", "113", "041", "214", "134", "033", "103", "301", "214", "114", "220", "223", "304", "102", "022", "204", "010", "144", "143", "204", "210", "202", "222", "242", "234", "020", "212", "042", "213", "143", "232", "203", "012", "114", "112", "110", "111",
     "034", "101", "013", "114", "141", "012", "110", "241", "210", "114", "300", "204", "014", "011", "220", "010", "043", "100", "140", "132", "310", "100", "022", "042", "301", "040", "201", "222", "041", "130", "014", "131", "020", "134", "243", "013", "113", "240", "243", "011", "111", "041", "242", "010", "130", "221", "201", "132", "231", "224", "244", "221", "100", "223", "132", "044", "131"]
]

msgs_eye_raw = [
    # East 1
    [
        "201013223304041130232114313033004024000",
        "032041220001422242122220110003201341113",
        "310221044000200104040144142033022034241",
        "231313130031132120142231331441341441211",
        "014003212114130041110100241241004031001",
        "040331432341122101010040120412442442402",
        "13331220330103113111211210322314",
        "1310424224130304110203123204313"
    ],

    # West 1
    [
        "311013223304041130232114313033004024004",
        "032041220001422242122220110003201341101",
        "020201044000104044040144142033022034131",
        "111213130001102020142231331441341441401",
        "212223303244000243231110221231031022043",
        "403431401222111340210301413341221330132",
        "02414221422203024200123212402323201403",
        "3101322112130203222200422310313224113"
    ],

    # East 2
    [
        "121013223304041130232114313033004024004",
        "132041220001422242122220110003201341132",
        "302013230044210143001214140311024104223",
        "102441113222231403330130231010322441422",
        "014113030144102020311114241034232132112",
        "141120120040103022122402040000103221040",
        "001132210042231043242013103010200300221",
        "020142240312031330231000103310441201422",
        "034201043101100200124",
        "131402022020141322311"
    ],

    # West 2
    [
        "301014304231111130103200114211142042144",
        "132041002441200222141013240022220120402",
        "110120210044012022014100202130013243312",
        "401130112010322313431422313213031100003",
        "143110223024224201021223142200103111223",
        "203401230041222213132220230242140211440",
        "122201000012143101233312010224203221",
        "011010101321231103032030241320322030"
    ],

    # East 3
    [
        "221014304000100302220231222232144144211",
        "332041002222431341003242000010220042431",
        "313223312120134004141302310001231043130",
        "020020140002021212311100003112220110032",
        "140214222023042001214241211223104010034",
        "003021031300212210310000312332003240422",
        "001240241020232043043031224131312301142",
        "232311130211021020222341412113240321230",
        "001030124221224033003211024213133231001",
        "410210103300432031412111422330403400041",
        "04124012304",
        "0423010104"
    ],

    # West 3
    [
        "111014304044023101033232120113240032023",
        "432041002342120301441212222401420211130",
        "033031134224144111303003142234042131112",
        "431413200210141202112431230203111430021",
        "103133214200230011143034143033110122120",
        "101132211120442310131321231020311022200",
        "120120123130011024014133021023002220044",
        "210312220001440122003232142141332131220",
        "120224022234203033120244040200",
        "002121100141102242103402411442"
    ],

    # East 4
    [
        "101014304000100000010213233120142133003",
        "232041002222431212430430300110203421130",
        "101004223210034300144214224022200300022",
        "303411022313202403302030222441142010141",
        "143234300120242230110301302001040030130",
        "012332401341341302441301412412222303322",
        "212222143130302013102113102230003103232",
        "432331411032403200122103112431440120231",
        "12202423010131123221303",
        "3421210220100323034034"
    ],

    # West 4
    [
        "3010143040001000000102132331201400400025",
        "2320410022224312124304303001102221131425",
        "2113102140010321222411243001001312233135",
        "0302212301323014304134203000323324211405",
        "0402102401032022102430210121030120332325",
        "4022111031324121021424403111220214311415",
        "2042332412033020233010412042410122321015",
        "3111403114212321224102401324400302214405",
        "2243141140421211141401305",
        "0202310000310001021400115"
    ],

    # East 5
    [
        "1110143040001000000102132331201430441335",
        "3320410022224312124304303001102111124305",
        "1012142233020240141442122222302122132335",
        "3034110224012020413020022424202403412025",
        "0141101141031110102401102040100131001305",
        "2112111301104412111124034101220400412135",
        "1020410412211341301330132430110420102215",
        "0202030022400101204423110421111420311025",
        "1312242202220415",
        "2324421013314315"
    ]
]


def generate_random_msgs_tri(upper=124):
    msgs_random = []
    msgs_random_flat = []
    for i in range(9):
        msgs_random.append([random.randint(0, upper)
                           for _ in range(random.randint(95, 135))])
        msgs_random_flat.append(
            [np.base_repr(v, base=5).rjust(3, "0") for v in msgs_random[i]])
    return msgs_random, msgs_random_flat


def generate_random_msgs_triflat():
    return str(random.randint(0, 4)) + str(random.randint(0, 4)) + str(random.randint(0, 4))

# -------- Main --------


def rotate_triflat(flat):
    return flat[1] + flat[2] + flat[0]


def conv_tri_to_triflat(tri):
    return to_base(tri, 5).rjust(3, "0")


def conv_tri_to_triflat_open(n, base):
    convertString = "01234"
    if n < base:
        return convertString[n]
    else:
        return conv_tri_to_triflat_open(n//base, base) + convertString[n % base]


def conv_triflat_to_tri(flat):
    return int(flat, 5)


def conv_triflat_to_tri_ordered(flat, order):
    return int(flat[order[0] - 1] + flat[order[1] - 1] + flat[order[2] - 1], 5)


def conv_triflat_to_tri_unrotated(flat):
    t1 = conv_triflat_to_tri(flat)
    t2 = conv_triflat_to_tri(rotate_triflat(flat))
    t3 = conv_triflat_to_tri(rotate_triflat(rotate_triflat(flat)))
    return min(min(t1, t2), t3)


def conv_triflat_to_tri_flipped(flat):
    return conv_triflat_to_tri(flat[0] + flat[2] + flat[1])


def check_tri_valid(tri):
    return int(tri) < 312

# -------- Data Comments --------

# Message 0 (East 1)
# 2010132233040411302321143130330040240005
# 0320412200014222421222201100032013411135
# 3102210440002001040401441420330220342415
# 2313131300311321201422313314413414412115
# 0140032121141300411101002412410040310015
# 0403314323411221010100401204124424424025
# 133312203301031131112112103223145
# 13104242241303041102031232043135

# Message 1 (West 1)
# 3110132233040411302321143130330040240045
# 0320412200014222421222201100032013411015
# 0202010440001040440401441420330220341315
# 1112131300011020201422313314413414414015
# 2122233032440002432311102212310310220435
# 4034314012221113402103014133412213301325
# 024142214222030242001232124023232014035
# 31013221121302032222004223103132241135

# Message 2 (East 2)
# 1210132233040411302321143130330040240045
# 1320412200014222421222201100032013411325
# 3020132300442101430012141403110241042235
# 1024411132222314033301302310103224414225
# 0141130301441020203111142410342321321125
# 1411201200401030221224020400001032210405
# 0011322100422310432420131030102003002215
# 0201422403120313302310001033104412014225
# 0342010431011002001245
# 1314020220201413223115

# Message 3 (West 2)
# 3010143042311111301032001142111420421445
# 1320410024412002221410132400222201204025
# 1101202100440120220141002021300132433125
# 4011301120103223134314223132130311000035
# 1431102230242242010212231422001031112235
# 2034012300412222131322202302421402114405
# 1222010000121431012333120102242032215
# 0110101013212311030320302413203220305

# Message 4 (East 3)
# 2210143040001003022202312222321441442115
# 3320410022224313410032420000102200424315
# 3132233121201340041413023100012310431305
# 0200201400020212123111000031122201100325
# 1402142220230420012142412112231040100345
# 0030210313002122103100003123320032404225
# 0012402410202320430430312241313123011425
# 2323111302110210202223414121132403212305
# 0010301242212240330032110242131332310015
# 4102101033004320314121114223304034000415
# 041240123045
# 04230101045

# Message 5 (West 3)
# 1110143040440231010332321201132400320235
# 4320410023421203014412122224014202111305
# 0330311342241441113030031422340421311125
# 4314132002101412021124312302031114300215
# 1031332142002300111430341430331101221205
# 1011322111204423101313212310203110222005
# 1201201231300110240141330210230022200445
# 2103122200014401220032321421413321312205
# 1202240222342030331202440402005
# 0021211001411022421034024114425

# Message 6 (East 4)
# 1010143040001000000102132331201421330035
# 2320410022224312124304303001102034211305
# 1010042232100343001442142240222003000225
# 3034110223132024033020302224411420101415
# 1432343001202422301103013020010400301305
# 0123324013413413024413014124122223033225
# 2122221431303020131021131022300031032325
# 4323314110324032001221031124314401202315
# 122024230101311232213035
# 34212102201003230340345

# Message 7 (West 4)
# 3010143040001000000102132331201400400025
# 2320410022224312124304303001102221131425
# 2113102140010321222411243001001312233135
# 0302212301323014304134203000323324211405
# 0402102401032022102430210121030120332325
# 4022111031324121021424403111220214311415
# 2042332412033020233010412042410122321015
# 3111403114212321224102401324400302214405
# 2243141140421211141401305
# 0202310000310001021400115

# Message 8 (East 5)
# 1110143040001000000102132331201430441335
# 3320410022224312124304303001102111124305
# 1012142233020240141442122222302122132335
# 3034110224012020413020022424202403412025
# 0141101141031110102401102040100131001305
# 2112111301104412111124034101220400412135
# 1020410412211341301330132430110420102215
# 0202030022400101204423110421111420311025
# 1312242202220415
# 2324421013314315

# All Messages [0-8] Trigrams [0-82] ASCII
# Rb%P^-k=8]Jfb^@.q(/n"=-Q!prH_q53 HSa:.5fOLPJ3P-O3Qh?%8#K[cAQI\5:>%94g+jX$j3g$SIKphV_oq/0L?>,AY<-`KP
# pb%P^-k=8]Jfb^@.q(/n"=-Q!=+>Tq53 9:V4.5fOLPJ3P-O3QL:[m`Ko<h`!>i7c&A9`qdN1D-15d-)NcYB^r/*i^"+ahEL*Kd^)B2
# Db%P^-k=8]Jfb^@.q(/n"=-Q!elT)Pbp6`YHQn#0X3OHp&-`=Q`_&Q?-0*M8:m*\q]BVf5/$bmJE>6 +IhY47YaI72hJ%#:n(%VMm9`]0LVS4_9+:MU\FB
# lb%QkVeN@!J\:PRp@8W]O,5,QVB9D/XW4)(^-r)L=\UrJp%Kg#pmOnB9^2*Q^`Tq+b^-O1Tf:7@?`7C@R&!9(EOK:ladp1'M_.U_\0
# _b%QkV"\=HnO\kcg\"a'O.Mj[Ip-\-q6CRHG"[P?l"pk!Xc+5(HaMkWG\J-#6Y"&Z)f!ZX_d9o'43`"bi>g0,>aE4-6_2N`[Iqr6nDO1$&1%Do_!`e/K$ZX?.`Z2Lne! N4gi9C(8
# Bb%QkV7j+-<:3PcYE\B<j*1@+23K3qJ$^)NQ@SlZ$KO1co5@L0>E:<IdYBS*ef(&NK2GOK/-A>C^E E%FWE-H9)5+`%oJd+g+P#c]H6.CR]G+"bQSU1iDkjV8>Vf
# ;b%QkV"\=H"W)/[2d#D%OmLF!2<l$B\_Zp1VokPVW3^`.OSfk%+OMZdeo9FMiOdRBMn:oY$X6\2kK\[c_JQAHaom'#:^?n:YeH$7:-cJFh+Ga\9&pbdm[n3
# mb%QkV"\=H"W)/[2d#D%O\5p!hW0rCY3!b2;G1jqG.n 9aKb`Fq78RY>gk:dVYXRgi.5(@:_%E3KbOUBb7i?VFmc+_o&65Sej5%1cE=5\.rL>$4JC!?VN4H>
# Ab%QkV"\=H"W)/[2d#D%OA5[L2<l[B\_o;,V%QPVWT^he*Y6ZPcU'B@>?3:(BN'>gWBkV)&\%79MJp9,6l4S^5H)I*Li(Afi&?5h%H]SJb`j]9_J8I
